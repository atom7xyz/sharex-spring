name: Release Build (JAR + Native Image)

on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:
    inputs:
      skip_native:
        description: 'Skip native image builds'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: write
  packages: write
  actions: write

env:
  SKIP_NATIVE: ${{ github.event.inputs.skip_native || 'true' }}

jobs:
  build-jar:
    name: Build JAR with Corretto
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup GraalVM JDK
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build JAR
        run: ./gradlew bootJar

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')

      - name: Rename JAR
        run: |
          cd build/libs/
          mv *.jar sharex-spring-${GITHUB_REF#refs/tags/}-default.jar
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: sharex-spring-jar
          path: build/libs/sharex-spring-*-default.jar

  build-native:
    name: Native Build with GraalVM
    if: env.SKIP_NATIVE == 'false'
    strategy:
      matrix:
        architecture: [amd64, arm64]
        include:
          - architecture: amd64
            runner: ubuntu-latest
            artifact-name: sharex-spring-x86_64
            graalvm-args: "--native-image-info"
          - architecture: arm64
            runner: ubuntu-24.04-arm
            artifact-name: sharex-spring-arm64
            graalvm-args: "--native-image-info"

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Native Image
        run: |
          ./gradlew -Porg.graalvm.buildtools.native.imageName=sharex-spring nativeCompile \
            -Porg.graalvm.buildtools.native.additionalArgs="${{ matrix.graalvm-args }}"

      - name: Rename executable for architecture
        run: |
          cd build/native/nativeCompile/
          ls -la
          mv sharex-spring sharex-spring-${GITHUB_REF#refs/tags/}-${{ matrix.architecture }}
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload Native Image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: build/native/nativeCompile/sharex-spring-*-${{ matrix.architecture }}

  create-release:
    name: Create Release
    needs: [build-jar, build-native]
    if: startsWith(github.ref, 'refs/tags/') && always()
    runs-on: ubuntu-latest

    steps:
      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/sharex-spring-jar/sharex-spring-*-default.jar
            ${{ env.SKIP_NATIVE == 'false' && 'artifacts/sharex-spring-x86_64/sharex-spring-*-amd64' || '' }}
            ${{ env.SKIP_NATIVE == 'false' && 'artifacts/sharex-spring-arm64/sharex-spring-*-arm64' || '' }}
          name: ${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}