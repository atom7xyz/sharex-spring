services:

  sharex-builder:
    image: 'gradle:9.0.0-jdk21-alpine'
    container_name: sharex-builder
    working_dir: /app
    volumes:
      - ../../:/app
    environment:
      - GRADLE_OPTS=-Dorg.gradle.daemon=false
    command: gradle build -x test --no-daemon
    restart: "no"

  sharex-spring:
    image: 'ghcr.io/graalvm/graalvm-community:21'
    container_name: sharex-spring
    working_dir: /app
    volumes:
      - ../../:/app
      - ../../ssl:/app/ssl  # Mount SSL certificates directory
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      # SERVER CONFIGURATION
      - SERVER_PORT=8443
      - SERVER_HTTP2_ENABLED=true
      - SERVER_SSL_ENABLED=false
      - SERVER_SSL_MODE=KEYSTORE
      # SERVER SSL KEYSTORE (if using KEYSTORE mode)
      - SERVER_SSL_KEY_STORE=file:ssl/keystore.p12
      - SERVER_SSL_KEY_STORE_TYPE=PKCS12
      - SERVER_SSL_KEY_STORE_PASSWORD=
      - SERVER_SSL_KEY_ALIAS=
      # SERVER SSL CERTIFICATE (if using CERTIFICATE mode)
      - SERVER_SSL_CERTIFICATE=file:ssl/cert.pem
      - SERVER_SSL_CERTIFICATE_PRIVATE_KEY=file:ssl/privkey.pem
      - SERVER_SSL_CERTIFICATE_ENCRYPTION_KEY=
      # SERVER SSL TLS CONFIGURATION
      - SERVER_SSL_PROTOCOL=TLS
      - SERVER_SSL_ENABLED_PROTOCOLS=TLSv1.2,TLSv1.3
      - SERVER_SSL_CIPHERS=TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      - SERVER_SSL_CLIENT_AUTH=none
      # DATABASE CONNECTIVITY
      - SPRING_DATASOURCE_URL=jdbc:postgresql://sharex-database:5432/db_sharex
      - SPRING_DATASOURCE_USERNAME=sharex_user
      - SPRING_DATASOURCE_PASSWORD=sharex_password
      # REDIS CONNECTIVITY
      - SPRING_DATA_REDIS_HOST=sharex-redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=
      - SPRING_DATA_REDIS_DATABASE=0
      # MULTIPART CONFIGURATION
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=1024MB
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=1024MB
      # APPLICATION SECURITY
      - APP_SECURITY_RATE_LIMIT_ACTION_MAX_REQUESTS=20
      - APP_SECURITY_RATE_LIMIT_ACTION_WINDOW_DURATION=10
      - APP_SECURITY_RATE_LIMIT_WRONG_API_KEY_MAX_REQUESTS=1
      - APP_SECURITY_RATE_LIMIT_WRONG_API_KEY_WINDOW_DURATION=60
      # PUBLIC ENDPOINTS (Update these to use HTTPS and port 8443)
      - APP_PUBLIC_UPLOADED_FILES=http://localhost:8443/share/u/
      - APP_PUBLIC_SHORTENED_URLS=http://localhost:8443/share/s/
      # FILE UPLOAD DIRECTORY
      - APP_FILE_UPLOAD_DIRECTORY=./uploads/
      # APPLICATION LIMITS
      - APP_LIMITS_FILE_UPLOADER_GENERATED_NAME_LENGTH=8
      - APP_LIMITS_FILE_UPLOADER_SIZE=51200
      - APP_LIMITS_FILE_UPLOADER_ALLOWED_TYPES=image/jpeg,image/png,image/gif,application/pdf,text/plain,video/mp4
      - APP_LIMITS_URL_SHORTENER_GENERATED_NAME_LENGTH=4
    ports:
      - "8443:8443"
    command: ["java", "-jar", "./build/libs/sharex-spring-0.0.15.jar"]
    restart: unless-stopped
    user: "1000:1000"
    depends_on:
      sharex-database:
        condition: service_healthy
      sharex-redis:
        condition: service_healthy
      sharex-builder:
        condition: service_completed_successfully
    #networks:
    #  - shared-nginx

  sharex-database:
    image: 'postgres:17-alpine'
    container_name: sharex-database
    environment:
      - POSTGRES_USER=sharex_user
      - POSTGRES_PASSWORD=sharex_password
      - POSTGRES_DB=db_sharex
    volumes:
      - sharex_pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sharex_user -d db_sharex"]
      interval: 5s
      timeout: 5s
      retries: 10
    hostname: "localhost"
    ports:
      - "127.0.0.1:5432:5432"

  sharex-redis:
    image: 'redis:7-alpine'
    container_name: sharex-redis
    restart: unless-stopped
    volumes:
      - sharex_redisdata:/data
    command: redis-server --appendonly yes --requirepass sharex_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "sharex_redis_password", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "127.0.0.1:6379:6379"

volumes:
  sharex_pgdata:
  sharex_redisdata:

#networks:
#  shared-nginx:
#    external: true